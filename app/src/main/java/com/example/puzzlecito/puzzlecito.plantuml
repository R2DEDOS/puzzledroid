@startuml

title __PUZZLECITO's Class Diagram__\n

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.BBDDHelper {
        {static} - DATABASE_NAME : String
        {static} - DB_VERSION : int
        + onCreate()
        + onDowngrade()
        + onUpgrade()
        ~ BBDDHelper()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.BBDDSchema {
        {static} ~ NAME : String
        {static} ~ SQL_CREATE : String
        {static} ~ SQL_DELETE : String
        {static} ~ TABLE : String
        {static} ~ TIME : String
        - BBDDSchema()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.HelpActivity {
        - vistaAyuda : WebView
        + onBackPressed()
        # onCreate()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.ImageAdapter {
        - am : AssetManager
        - files : String[]
        - mContext : Context
        + ImageAdapter()
        + getCount()
        + getItem()
        + getItemId()
        + getView()
        - getPicFromAsset()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.MainActivity {
        {static} + difficulty : int
        {static} + elapsedTime : int
        {static} + name : String
        {static} + total_level : int
        + onBackPressed()
        + onCreateOptionsMenu()
        + onOptionsItemSelected()
        # onCreate()
        # showScore()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.PuzzleActivity {
        ~ chronometer : Chronometer
        ~ elapsedMillis : int
        ~ pieces : ArrayList<PuzzlePiece>
        + checkGameOver()
        + onBackPressed()
        # onCreate()
        - getBitmapPositionInsideImageView()
        - isGameOver()
        - setPicFromAsset()
        - showElapsedTime()
        - splitImage()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.PuzzlePiece {
        + canMove : boolean
        + pieceHeight : int
        + pieceWidth : int
        + xCoord : int
        + yCoord : int
        + PuzzlePiece()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.Score {
        - rows_score : int
        + onBackPressed()
        # onCreate()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.ScoreRegister {
        # onCreate()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.SelectImage {
        # onCreate()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.Splash_screen {
        # onCreate()
    }
  }
  

  namespace com.example.puzzlecito {
    class com.example.puzzlecito.TouchListener {
        - xDelta : float
        - yDelta : float
        + TouchListener()
        + onTouch()
        + sendViewToBack()
    }
  }
  

  com.example.puzzlecito.BBDDHelper -up-|> android.database.sqlite.SQLiteOpenHelper
  com.example.puzzlecito.HelpActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.puzzlecito.ImageAdapter -up-|> android.widget.BaseAdapter
  com.example.puzzlecito.MainActivity .up.|> android.view.Window.Callback
  com.example.puzzlecito.MainActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.puzzlecito.PuzzleActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.puzzlecito.PuzzlePiece -up-|> androidx.appcompat.widget.AppCompatImageView
  com.example.puzzlecito.Score -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.puzzlecito.ScoreRegister -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.puzzlecito.SelectImage -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.puzzlecito.Splash_screen -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.puzzlecito.TouchListener .up.|> android.view.View.OnTouchListener
  com.example.puzzlecito.TouchListener o-- com.example.puzzlecito.PuzzleActivity : activity


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
